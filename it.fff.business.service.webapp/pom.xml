<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>it.fff.business.service</groupId>
  <artifactId>it.fff.business.service.webapp</artifactId>
  <version>1.0</version> 
  <packaging>war</packaging>
	<build>
		<plugins>
	        <plugin>
	        	<groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-compiler-plugin</artifactId>
	            <configuration>
	                <source>1.7</source>
	                <target>1.7</target>
	            </configuration>
	        </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<webResources>
						<resource>
							<directory>WebContent</directory>
						</resource>
					</webResources>
					<filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>					
					<webXml>WebContent/WEB-INF/web.xml</webXml>
					<packagingExcludes>
					WEB-INF/ibm-web-bnd.xmi,WEB-INF/ibm-web-ext.xmi
					</packagingExcludes>								
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
			</plugin>
		</plugins>
	</build>  
	<dependencies>
		<dependency>
			<groupId>it.fff.business.common</groupId>
			<artifactId>it.fff.business.common</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>it.fff.business.facade</groupId>
			<artifactId>it.fff.business.facade</artifactId>
			<version>1.0</version>
		</dependency>
		  <dependency>
		  	<groupId>it.fff.clientserver.common</groupId>
		  	<artifactId>it.fff.clientserver.common</artifactId>
		  	<version>1.0</version>
		  </dependency>
		<dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>javax.servlet-api</artifactId>
		    <version>3.0.1</version>
		    <scope>provided</scope>
		</dependency>		  				
		<dependency>
		    <groupId>org.glassfish.jersey.containers</groupId>
		    <artifactId>jersey-container-servlet</artifactId>
		    <version>2.22.1</version>
		</dependency>
		<dependency>
		    <groupId>org.glassfish.jersey.ext</groupId>
		    <artifactId>jersey-spring3</artifactId>
		    <version>2.22.1</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-web</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-beans</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-context</artifactId>
				</exclusion>
			</exclusions>		    
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.bundles</groupId>
			<artifactId>jaxrs-ri</artifactId>
			<version>2.22.1</version>
		</dependency>
		<!-- 
		MOXy utile per mappare LISTE in oggetti JSON in entrata/uscita (MessageBodyReader/Writer)
		MOXy media module is one of the modules where you don't need to explicitly register it's Features (MoxyJsonFeature) 
		A manual registration of any other Jersey JSON provider feature (except for Java API for JSON Processing (JSON-P)) disables the automated enabling and configuration of MoxyJsonFeature.
		In order to make MoxyJsonConfig visible for MOXy you need to create and register ContextResolver<T> in your client/server code.
		-->
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-moxy</artifactId>
			<version>2.22.1</version>
		</dependency>
		<dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-processing</artifactId>
            <version>2.22.1</version>
        </dependency>
		<dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-sse</artifactId>
            <version>2.22.1</version>
        </dependency>        		
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-multipart</artifactId>
			<version>2.22.1</version>
		</dependency>		
		<!-- do not use Jackson because moxy is jersey default
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.6.3</version>
		</dependency-->
		<!-- Spring 3 dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>3.0.5.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>3.0.5.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>3.0.5.RELEASE</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-api</artifactId>
		    <version>2.4.1</version>
		  </dependency>
		  <dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-core</artifactId>
		    <version>2.4.1</version>
		  </dependency>	  
	</dependencies>
</project>